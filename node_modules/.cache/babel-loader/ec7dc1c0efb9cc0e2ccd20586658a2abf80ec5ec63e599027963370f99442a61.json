{"ast":null,"code":"var _jsxFileName = \"/Users/smike/Documents/GitHub/442-Group-3-Spring-2023/Code/enviro_tracker/src/Components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { MapContainer } from 'react-leaflet/MapContainer';\nimport { Marker } from 'react-leaflet/Marker';\nimport { Popup } from 'react-leaflet/Popup';\nimport { TileLayer } from 'react-leaflet/TileLayer';\nimport { Circle } from 'react-leaflet/Circle';\nimport { useMap } from 'react-leaflet/hooks';\nimport \"../CSS/Map.css\";\nimport { getStoredData, getLiveData, generateMockData } from \"../db/dbFuncs.ts\";\nimport { db } from \"../db/dbInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [data, setData] = useState([]);\n\n  // DATA FORMATTING\n  // {\n  //   \"IePlFjuMpgFnGvKZDRgi\": {\n  //       \"long\": \"-87.64712811866409\",\n  //       \"data\": {\n  //           \"pm25\": \"44\",\n  //           \"voc\": \"12\",\n  //           \"temp\": \"33\",\n  //           \"CO2\": \"25\",\n  //           \"ozone\": \"125\",\n  //           \"humidity\": \"92\"\n  //       },\n  //       \"timestamp\": \"2/13/2023\",\n  //       \"lat\": \"41.86579351612219\"\n  //   }\n  // }\n\n  // access data, make sure its loaded first though\n  /*if(data != undefined)\n  {\n    //console.log(data);            // you'll notice this stuff prints twice, since React.Strict is on it will render twice\n    // console.log(data[\"KONGDOG\"]); // see -> shorturl.at/cwER3  \n    //console.log(data[\"KONGDOG\"][\"long\"]); // etc. etc...\n    // console.log(data[\"KONGDOG\"][\"data\"][\"pm25\"]);\n  }*/\n\n  useEffect(() => {\n    (async function pullData() {\n      let d = await getStoredData(db);\n      setData(d);\n      console.log('pulldata');\n      setTimeout(pullData, 1800000); // refreshes every 3 minutes\n    })();\n\n    console.log(data);\n  }, []);\n\n  // creates a list of all markers using info from data\n  // list used later to populate the map with markers\n  let markers = [];\n  for (const key in data) {\n    markers.push( /*#__PURE__*/_jsxDEV(Marker, {\n      position: [data[key][\"lat\"], data[key][\"long\"]],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [key, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), \" pm25: \", data[key][\"data\"][\"pm25\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), \" voc: \", data[key][\"data\"][\"voc\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), \" temp: \", data[key][\"data\"][\"temp\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), \" CO2: \", data[key][\"data\"][\"CO2\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), \" ozone: \", data[key][\"data\"][\"ozone\"], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), \" humidity: \", data[key][\"data\"][\"humidity\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this));\n\n    // creates blue circle if humidity is too high\n    if (data[key][\"data\"][\"humidity\"] > 50) {\n      markers.push( /*#__PURE__*/_jsxDEV(Circle, {\n        center: [data[key][\"lat\"], data[key][\"long\"]],\n        radius: \"70\",\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this));\n    }\n\n    // creates red circle if humidity is too low\n    if (data[key][\"data\"][\"humidity\"] < 15) {\n      markers.push( /*#__PURE__*/_jsxDEV(Circle, {\n        center: [data[key][\"lat\"], data[key][\"long\"]],\n        radius: \"70\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  // map container creates map centered at UIC\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.86877130657323, -87.64863209188573],\n      zoom: 16,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useMemo","useEffect","useState","MapContainer","Marker","Popup","TileLayer","Circle","useMap","getStoredData","getLiveData","generateMockData","db","Map","data","setData","pullData","d","console","log","setTimeout","markers","key","push"],"sources":["/Users/smike/Documents/GitHub/442-Group-3-Spring-2023/Code/enviro_tracker/src/Components/Map.js"],"sourcesContent":["import React, { useMemo, useEffect, useState } from \"react\";\nimport { MapContainer } from 'react-leaflet/MapContainer'\nimport { Marker } from 'react-leaflet/Marker'\nimport { Popup } from 'react-leaflet/Popup'\nimport { TileLayer } from 'react-leaflet/TileLayer'\nimport { Circle } from 'react-leaflet/Circle'\nimport { useMap } from 'react-leaflet/hooks'\n\nimport \"../CSS/Map.css\";\n\nimport { getStoredData, getLiveData, generateMockData } from \"../db/dbFuncs.ts\"\nimport { db } from \"../db/dbInstance\"\n\nfunction Map() {\n  \n  const [data, setData] = useState([]);\n\n  // DATA FORMATTING\n  // {\n  //   \"IePlFjuMpgFnGvKZDRgi\": {\n  //       \"long\": \"-87.64712811866409\",\n  //       \"data\": {\n  //           \"pm25\": \"44\",\n  //           \"voc\": \"12\",\n  //           \"temp\": \"33\",\n  //           \"CO2\": \"25\",\n  //           \"ozone\": \"125\",\n  //           \"humidity\": \"92\"\n  //       },\n  //       \"timestamp\": \"2/13/2023\",\n  //       \"lat\": \"41.86579351612219\"\n  //   }\n  // }\n\n  // access data, make sure its loaded first though\n  /*if(data != undefined)\n  {\n    //console.log(data);            // you'll notice this stuff prints twice, since React.Strict is on it will render twice\n    // console.log(data[\"KONGDOG\"]); // see -> shorturl.at/cwER3  \n    //console.log(data[\"KONGDOG\"][\"long\"]); // etc. etc...\n    // console.log(data[\"KONGDOG\"][\"data\"][\"pm25\"]);\n  }*/\n\n  useEffect(()=> {\n    (async function pullData() {\n      let d = await getStoredData(db);\n      \n      setData(d);\n      console.log('pulldata');\n      setTimeout(pullData, 1800000);  // refreshes every 3 minutes\n    })();\n\n    console.log(data);\n  }, []);\n\n  // creates a list of all markers using info from data\n  // list used later to populate the map with markers\n  let markers = [];\n\n  for (const key in data) {\n    markers.push(\n    <Marker position={[data[key][\"lat\"], data[key][\"long\"]]}>\n      <Popup>\n        {key}\n        <br/> pm25: {data[key][\"data\"][\"pm25\"]}\n        <br/> voc: {data[key][\"data\"][\"voc\"]}\n        <br/> temp: {data[key][\"data\"][\"temp\"]}\n        <br/> CO2: {data[key][\"data\"][\"CO2\"]}\n        <br/> ozone: {data[key][\"data\"][\"ozone\"]}\n        <br/> humidity: {data[key][\"data\"][\"humidity\"]}\n      </Popup>\n    </Marker>\n    )\n    \n    // creates blue circle if humidity is too high\n    if(data[key][\"data\"][\"humidity\"] > 50) {\n      markers.push(\n        <Circle center={[data[key][\"lat\"], data[key][\"long\"]]} radius=\"70\" color=\"blue\"/>\n        )\n    }\n\n    // creates red circle if humidity is too low\n    if(data[key][\"data\"][\"humidity\"] < 15) {\n      markers.push(\n        <Circle center={[data[key][\"lat\"], data[key][\"long\"]]} radius=\"70\" color=\"red\"/>\n        )\n    }\n  }\n\n  // map container creates map centered at UIC\n  return (\n    <div id='map'> \n        <MapContainer center={[41.86877130657323, -87.64863209188573]} zoom={16} scrollWheelZoom={false}>\n            <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n            <ul>{markers}</ul>\n        </MapContainer>\n    </div>\n  );\n}\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}