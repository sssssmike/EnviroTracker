{"ast":null,"code":"var _jsxFileName = \"/Users/smike/Documents/GitHub/442-Group-3-Spring-2023/Code/enviro_tracker/src/Components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../CSS/Login.css\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { db } from \"../db/dbInstance.js\";\n\n// import {auth} from \"../firebase\";\n\n// components are individual sections of a page. Think tweets on twitter or Youtube videos (thumbnails and title on homepage)\n//  They are most efficient when you repeat them multiple times on the same page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = db;\nconst auth = getAuth();\nfunction Login() {\n  _s();\n  const [loginfail, invalidlogin] = useState(false);\n  const [email, setUsername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const navigate = useNavigate();\n  const signIn = e => {\n    e.preventDefault();\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in\n      // const user = userCredential.user;\n      invalidlogin(false);\n      //navigate(\"/PatientSelect\", { state: { username: email } });\n    }).catch(error => {\n      invalidlogin(true);\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode + errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setpassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signIn,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: loginfail ? 'Invalid username or password' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"V8mpeOu9SlpYcjt23PdIuJIbqX8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","db","app","auth","Login","loginfail","invalidlogin","email","setUsername","password","setpassword","navigate","signIn","e","preventDefault","then","userCredential","catch","error","errorCode","code","errorMessage","message","console","log","target","value"],"sources":["/Users/smike/Documents/GitHub/442-Group-3-Spring-2023/Code/enviro_tracker/src/Components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../CSS/Login.css\";\n\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { db } from \"../db/dbInstance.js\";\n\n// import {auth} from \"../firebase\";\n\n// components are individual sections of a page. Think tweets on twitter or Youtube videos (thumbnails and title on homepage)\n//  They are most efficient when you repeat them multiple times on the same page\n\nconst app = db;\nconst auth = getAuth();\n\nfunction Login() {\n  const [loginfail, invalidlogin] = useState(false);\n  const [email, setUsername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const signIn = (e) => {\n    e.preventDefault();\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        // const user = userCredential.user;\n        invalidlogin(false);\n        //navigate(\"/PatientSelect\", { state: { username: email } });\n      })\n      .catch((error) => {\n        invalidlogin(true);\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode + errorMessage);\n      });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form>\n        <input\n          id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <input\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => {\n            setpassword(e.target.value);\n          }}\n        />\n        <button onClick={signIn}>Log in</button>\n        <span>{loginfail ? 'Invalid username or password' : ''}</span>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AAEzB,SACEC,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,QACrB,eAAe;AACtB,SAASC,EAAE,QAAQ,qBAAqB;;AAExC;;AAEA;AACA;AAAA;AAEA,MAAMC,GAAG,GAAGD,EAAE;AACd,MAAME,IAAI,GAAGL,OAAO,EAAE;AAEtB,SAASM,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,MAAM,GAAIC,CAAC,IAAK;IACpBA,CAAC,CAACC,cAAc,EAAE;IAClBd,0BAA0B,CAACG,IAAI,EAAEI,KAAK,EAAEE,QAAQ,CAAC,CAC9CM,IAAI,CAAEC,cAAc,IAAK;MACxB;MACA;MACAV,YAAY,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBZ,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMa,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCC,OAAO,CAACC,GAAG,CAACL,SAAS,GAAGE,YAAY,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,uBAC9B;MAAA,wBACE;QACE,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,QAAQ,EAAGR,CAAC,IAAK;UACfL,WAAW,CAACK,CAAC,CAACY,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QACE,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,QAAQ,EAAGb,CAAC,IAAK;UACfH,WAAW,CAACG,CAAC,CAACY,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QAAQ,OAAO,EAAEd,MAAO;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eACxC;QAAA,UAAOP,SAAS,GAAG,8BAA8B,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACzD;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhDQD,KAAK;EAAA,QAIKP,WAAW;AAAA;AAAA,KAJrBO,KAAK;AAkDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}